/* DO NOT EDIT THIS FILE - it is machine generated */
#include <stdlib.h>
#include <jni.h>
#include "club_younge_ndk_NdkImageUtils.h"
/* Header for class club_younge_ndk_NdkImageUtils */


/*
 * Class:     club_younge_ndk_NdkImageUtils
 * Method:    getImage
 * Signature: ([III)[I
 */
JNIEXPORT jintArray JNICALL Java_club_younge_ndk_NdkImageUtils_getImage
  (JNIEnv *env, jclass clazz, jintArray buffer, jint width, jint height){
	jint *buf = (jint*)env->GetIntArrayElements(buffer, 0);
	jsize len = env->GetArrayLength(buffer);
	jint resultBuf[len];
	jintArray result = env->NewIntArray(len);
	int color, a, r, g, b, rt, gt, bt;
	int bright = (int)(0.2f*256);
	float contrast = 0.2f;
	for(int x = 0; x < width; x++){
		for(int y = 0; y < height; y++){
			color = buf[y*width + x];
			a = color  >> 24;
			r = (color >> 16) & 0xFF;
			g = (color >> 8) & 0xFF;
			b = color & 0xFF;

			//改变亮度
			rt = r + bright;
			gt = g + bright;
			bt = b + bright;

			r = rt > 255 ? 255 : rt;
			g = gt > 255 ? 255 : gt;
			b = bt > 255 ? 255 : bt;
			//改变对比度
			r = r - 128;
			g = g - 128;
			b = b - 128;

			rt = (int) (r*(1 + contrast)) + 128;
			gt = (int) (g*(1 + contrast)) + 128;
			bt = (int) (b*(1 + contrast)) + 128;

			r = rt > 255 ? 255 : (rt < 0 ? 0 : rt);
			g = gt > 255 ? 255 : (gt < 0 ? 0 : gt);
			b = bt > 255 ? 255 : (bt < 0 ? 0 : bt);

			color = a << 24 | r << 16 | g << 8 | b;
			resultBuf[y*width + x] = color;
		}
	}

	env->ReleaseIntArrayElements(buffer,buf,0);
	env->SetIntArrayRegion(result, 0, len, resultBuf);

	return result;
}
